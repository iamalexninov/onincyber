@use "../../sass/abstract/variables" as var;
@use "../../sass/abstract/breakpoints" as media;
@use "../../sass/components/buttons" as btn;

.header {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  width: 100%;
  padding: 20px;
  background-color: transparent;
  color: var.$white-light;
  transition: var.$transition-out-5;
  &.active {
    color: var.$black;
    background-color: var.$white-light;
    box-shadow: var.$box-shadow;
    transition: var.$transition-in-5;
  }
  &__container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    &__navbar {
      position: absolute;
      top: 0;
      left: -100%;
      width: 80%;
      height: 100vh;
      background-color: var.$bg-light;
      transition: var.$transition-out-5;
      &.active {
        left: 0;
        transition: var.$transition-in-5;
      }
      @include media.desktop {
        all: unset;
      }
      &__list {
        display: flex;
        align-items: center;
        flex-direction: column;
        justify-content: center;
        height: 100%;
        gap: 1.75rem;
        @include media.desktop {
          flex-direction: row;
        }
        &__item {
          transition: var.$transition-out-3;
          &:hover {
            color: var.$primary-light;
            transition: var.$transition-in-3;
          }
        }
        &__btn {
          @include btn.button();
        }
      }
      &__icons {
        position: relative;
        z-index: 2;
        &__open,
        &__close {
          cursor: pointer;
          font-size: 1.75rem;
          color: var.$primary-light;
        }
        @include media.desktop{
            display: none;
        }
      }
    }
  }
}

/*
const name; // declaration
name = 'Alex' //initialization

casting: from 1 type data to another type

example: 1 + true, convert true to 1(true is 1 when convert in number) and the result is 11

null = 0
undefiend = NaN


two types of casting - implicit and explicit

сигнатура на метод - името на функцията + нейните параметри

overwrite
overload
*/
