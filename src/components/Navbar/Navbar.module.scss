@use "../../sass/abstract/variables" as var;
@use "../../sass/abstract/breakpoints" as media;
@use "../../sass/components/buttons" as btn;

.header {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 10;
  width: 100%;
  padding-block: 20px;
  color: var.$white-light;
  transition: var.$transition-out-5;
  &.active {
    background-color: var.$bg-dark;
    box-shadow: var.$box-shadow;
    transition: var.$transition-in-5;
  }
  &__container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    &__navbar {
      position: absolute;
      top: 0;
      left: -100%;
      width: 220px;
      height: 100vh;
      background-color: var.$bg-light;
      transition: var.$transition-out-5;
      &.active {
        left: 0;
        transition: var.$transition-in-5;
      }
      @include media.mobile {
        width: 280px;
      }
      @include media.tablet {
        all: unset;
      }
      &__top {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 20px;
        &__close {
          cursor: pointer;
          font-size: 2rem;
          background-color: var.$white-dark;
          border-radius: 50%;
          padding: 5px;
          color: var.$primary-light;
        }
      }
      &__list {
        position: absolute;
        top: 45%;
        left: 20px;
        transform: translateY(-45%);
        @include media.tablet {
          all: unset;
          display: flex;
          align-items: center;
          gap: 1.5rem;
        }
        &__item {
          margin-bottom: 20px;
          @include media.tablet {
            margin-bottom: 0px;
          }
          transition: var.$transition-out-3;
          &:hover {
            color: var.$primary-light;
            transition: var.$transition-in-3;
          }
        }
        &__btn {
          @include btn.button();
        }
      }
      &__bottom {
        position: absolute;
        bottom: 0;
        padding: 20px;
        font-weight: var.$fw-700;
      }
      &__top,
      &__bottom {
        @include media.tablet {
          display: none;
        }
      }
    }
    &__open {
      font-size: 1.75rem;
      cursor: pointer;
      @include media.tablet {
        display: none;
      }
    }
  }
}

/*
const name; // declaration
name = 'Alex' //initialization

casting: from 1 type data to another type

example: 1 + true, convert true to 1(true is 1 when convert in number) and the result is 11

null = 0
undefiend = NaN


two types of casting - implicit and explicit

сигнатура на метод - името на функцията + нейните параметри

overwrite
overload
*/
